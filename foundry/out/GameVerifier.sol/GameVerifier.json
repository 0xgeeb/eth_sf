{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "TRANSFER_REQUEST_ID",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSupportedRequests",
      "outputs": [
        {
          "internalType": "uint64[]",
          "name": "arr",
          "type": "uint64[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        }
      ],
      "name": "getZKPRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "idToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "proofs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestQueries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "schema",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "slotIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "operator",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "circuitId",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "name": "requestValidators",
      "outputs": [
        {
          "internalType": "contract ICircuitValidator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "contract ICircuitValidator",
          "name": "validator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ],
          "internalType": "struct ICircuitValidator.CircuitQuery",
          "name": "query",
          "type": "tuple"
        }
      ],
      "name": "setZKPRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "requestId",
          "type": "uint64"
        },
        {
          "internalType": "uint256[]",
          "name": "inputs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        }
      ],
      "name": "submitZKPResponse",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedRequests",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "149:838:2:-:0;;;;;;;;;;;;-1:-1:-1;929:32:6;719:10:1;929:18:6;:32::i;:::-;149:838:2;;2426:187:6;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:6;;;-1:-1:-1;;;;;;2534:17:6;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;149:838:2:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "149:838:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;242:46:2;;;;;;-1:-1:-1;;;;;363:32:8;;;345:51;;333:2;318:18;242:46:2;;;;;;;;2550:145:7;;;:::i;:::-;;;;;;;:::i;191:46:2:-;;236:1;191:46;;;;;-1:-1:-1;;;;;1229:31:8;;;1211:50;;1199:2;1184:18;191:46:2;1067:200:8;1824:101:6;;;:::i;:::-;;1194:85;1240:7;1266:6;-1:-1:-1;;;;;1266:6:6;1194:85;;313:71:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;390:61::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;390:61:7;;;249:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:14:8;;3346:22;3328:41;;3316:2;3301:18;249:57:7;3188:187:8;498:1070:7;;;;;;:::i;:::-;;:::i;1574:197::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;292:46:2:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8592:25:8;;;8580:2;8565:18;292:46:2;8446:177:8;458:33:7;;;;;;:::i;:::-;;:::i;2074:198:6:-;;;;;;:::i;:::-;;:::i;1777:767:7:-;;;;;;:::i;:::-;;:::i;2550:145::-;2629:19;2671:17;2664:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2664:24:7;-1:-1:-1;;;;;2664:24:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2550:145;:::o;1824:101:6:-;1087:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;313:71:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;498:1070::-;-1:-1:-1;;;;;744:28:7;;707:4;744:28;;;:17;:28;;;;;;-1:-1:-1;;;;;744:28:7;723:148;;;;-1:-1:-1;;;723:148:7;;10860:2:8;723:148:7;;;10842:21:8;10899:2;10879:18;;;10872:30;10938:34;10918:18;;;10911:62;-1:-1:-1;;;10989:18:8;;;10982:38;11037:19;;723:148:7;;;;;;;;;-1:-1:-1;;;;;922:25:7;;;;;;:14;:25;;;;;:32;:37;;901:120;;;;-1:-1:-1;;;901:120:7;;11269:2:8;901:120:7;;;11251:21:8;11308:2;11288:18;;;11281:30;11347:34;11327:18;;;11320:62;-1:-1:-1;;;11398:18:8;;;11391:34;11442:19;;901:120:7;11067:400:8;901:120:7;-1:-1:-1;;;;;1086:28:7;;;;;;:17;:28;;;;;;1048:67;;1067:9;;1078:6;;-1:-1:-1;;;;;1086:28:7;1048:18;:67::i;:::-;-1:-1:-1;;;;;1147:28:7;;;;;;:17;:28;;;;;;;;;1281:14;:25;;;;;;;1147:173;;-1:-1:-1;;;1147:173:7;;-1:-1:-1;;;;;1147:28:7;;;;:35;;:173;;1200:6;;1224:1;;1243;;1262;;1281:25;1147:173;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1126:247;;;;-1:-1:-1;;;1126:247:7;;15197:2:8;1126:247:7;;;15179:21:8;15236:2;15216:18;;;15209:30;15275:29;15255:18;;;15248:57;15322:18;;1126:247:7;14995:351:8;1126:247:7;1391:10;1384:18;;;;1416:4;1384:18;;;;;;;;-1:-1:-1;;;;;1384:29:7;;;;;;;;;:36;;-1:-1:-1;;1384:36:7;;;;;;;1511:17;:28;;;;;1474:66;;1403:9;;1503:6;;-1:-1:-1;;;;;1511:28:7;1474:17;:66::i;:::-;-1:-1:-1;1557:4:7;498:1070;;;;;;;:::o;1574:197::-;1679:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:37:7;-1:-1:-1;;;;;1739:25:7;;;;;;:14;:25;;;;;;;;;1732:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:25;;1732:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:197;;;:::o;458:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;458:33:7;;:::o;2074:198:6:-;1087:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:6;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:6;;15553:2:8;2154:73:6::1;::::0;::::1;15535:21:8::0;15592:2;15572:18;;;15565:30;15631:34;15611:18;;;15604:62;-1:-1:-1;;;15682:18:8;;;15675:36;15728:19;;2154:73:6::1;15351:402:8::0;2154:73:6::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1777:767:7:-;1959:4;1087:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;1979:28:7;::::1;2037:4;1979:28:::0;;;:17:::1;:28;::::0;;;;;-1:-1:-1;;;;;1979:28:7::1;1975:128;;2059:17;:33:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2059:33:7;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2059:33:7;;::::1;;::::0;;;;;;;::::1;;;::::0;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;1975:128:::1;2146:11;::::0;::::1;::::0;-1:-1:-1;;;;;2112:25:7;::::1;;::::0;;;:14:::1;:25;::::0;;;;;;;:45;;::::1;::::0;:31:::1;::::0;;::::1;::::0;:45;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2204:14:7::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2167:25:7;::::1;;::::0;;;:14:::1;:25;::::0;;;;;;:34;;::::1;:51:::0;2266:15:::1;::::0;::::1;::::0;2228:35:::1;::::0;;::::1;::::0;:53:::1;::::0;:35;:53:::1;:::i;:::-;-1:-1:-1::0;2329:15:7::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2291:25:7;::::1;;::::0;;;:14:::1;:25:::0;;;;;;;:35:::1;::::0;::::1;:53:::0;;;;2389:12;;2354:47;;2450:15:::1;::::0;::::1;::::0;2412:35:::1;::::0;;::::1;::::0;:53:::1;::::0;:35;:53:::1;:::i;:::-;-1:-1:-1::0;;;;;;;2476:28:7;::::1;;::::0;;;:17:::1;:28;::::0;;;;:40;;-1:-1:-1;;;;;2476:40:7;::::1;-1:-1:-1::0;;;;;;2476:40:7;;::::1;;::::0;;;1777:767;;;;;:::o;1352:130:6:-;1240:7;1266:6;-1:-1:-1;;;;;1266:6:6;719:10:1;1415:23:6;1407:68;;;;-1:-1:-1;;;1407:68:6;;18049:2:8;1407:68:6;;;18031:21:8;;;18068:18;;;18061:30;18127:34;18107:18;;;18100:62;18179:18;;1407:68:6;17847:356:8;2426:187:6;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:6;;;-1:-1:-1;;;;;;2534:17:6;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;348:288:2:-;467:13;483:72;512:6;519:9;-1:-1:-1;;;;;519:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;512:42;;;;;;;;:::i;:::-;;;;;;;483:28;:72::i;:::-;467:88;-1:-1:-1;569:10:2;-1:-1:-1;;;;;569:19:2;;;561:70;;;;-1:-1:-1;;;561:70:2;;18731:2:8;561:70:2;;;18713:21:8;18770:2;18750:18;;;18743:30;18809:34;18789:18;;;18782:62;-1:-1:-1;;;18860:18:8;;;18853:36;18906:19;;561:70:2;18529:402:8;561:70:2;461:175;348:288;;;:::o;640:340::-;-1:-1:-1;;;;;771:32:2;;236:1;771:32;:64;;;;-1:-1:-1;819:10:2;807:23;;;;:11;:23;;;;;;:28;771:64;763:117;;;;-1:-1:-1;;;763:117:2;;19138:2:8;763:117:2;;;19120:21:8;19177:2;19157:18;;;19150:30;19216:34;19196:18;;;19189:62;-1:-1:-1;;;19267:18:8;;;19260:38;19315:19;;763:117:2;18936:404:8;763:117:2;886:10;899:6;906:9;-1:-1:-1;;;;;906:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;899:42;;;;;;;;:::i;:::-;;;;;;;;;;;;947:15;;;;:11;:15;;;;;;:28;;-1:-1:-1;;;;;;947:28:2;965:10;947:28;;;-1:-1:-1;;;;640:340:2:o;4378:141:3:-;4441:7;4467:45;4482:29;4496:14;4504:5;423:9;448:5;444:9;;737:1;630;650:66;630:86;629:109;;611:1;504;524:66;504:86;503:109;;502:237;486:253;;1036:2;929:1;949:66;929:86;928:110;;909:2;802:1;822:66;802:86;801:110;;800:239;784:255;;1336:2;1229:1;1249:66;1229:86;1228:110;;1209:2;1102:1;1122:66;1102:86;1101:110;;1100:239;1084:255;;1636:2;1529:1;1549:66;1529:86;1528:110;;1509:2;1402:1;-1:-1:-1;;1402:86:3;1401:110;;1400:239;1384:255;;1708:3;1703:1;:8;;1695:3;1690:1;:8;;1689:23;1685:27;;368:1351;;;;4496:14;4482:13;:29::i;:::-;4308:2;4299:12;4293:19;;4145:183;4467:45;4460:52;4378:141;-1:-1:-1;;4378:141:3:o;156:170::-;243:13;;;253:2;243:13;;;;;;;;;213:14;;243:13;;;;;;;;-1:-1:-1;;;303:2:3;296:10;;289:21;;;;-1:-1:-1;296:10:3;156:170::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:8;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:8;;14:180;-1:-1:-1;14:180:8:o;407:655::-;576:2;628:21;;;698:13;;601:18;;;720:22;;;547:4;;576:2;799:15;;;;773:2;758:18;;;547:4;842:194;856:6;853:1;850:13;842:194;;;921:13;;-1:-1:-1;;;;;917:38:8;905:51;;1011:15;;;;976:12;;;;878:1;871:9;842:194;;;-1:-1:-1;1053:3:8;;407:655;-1:-1:-1;;;;;;407:655:8:o;1272:171::-;1339:20;;-1:-1:-1;;;;;1388:30:8;;1378:41;;1368:69;;1433:1;1430;1423:12;1368:69;1272:171;;;:::o;1448:184::-;1506:6;1559:2;1547:9;1538:7;1534:23;1530:32;1527:52;;;1575:1;1572;1565:12;1527:52;1598:28;1616:9;1598:28;:::i;:::-;1588:38;1448:184;-1:-1:-1;;;1448:184:8:o;1637:413::-;1679:3;1717:5;1711:12;1744:6;1739:3;1732:19;1770:4;1792:1;1802:133;1816:6;1813:1;1810:13;1802:133;;;1905:13;;;1901:22;;1895:29;1877:11;;;1873:20;;1866:59;1831:10;;1802:133;;;-1:-1:-1;1978:1:8;1955:16;;;1951:25;;1944:36;2034:2;2013:15;;;-1:-1:-1;;2009:29:8;2000:39;;;1996:48;;;;1637:413;-1:-1:-1;;1637:413:8:o;2055:435::-;2288:6;2277:9;2270:25;2331:6;2326:2;2315:9;2311:18;2304:34;2374:6;2369:2;2358:9;2354:18;2347:34;2417:3;2412:2;2401:9;2397:18;2390:31;2251:4;2438:46;2479:3;2468:9;2464:19;2456:6;2438:46;:::i;:::-;2430:54;2055:435;-1:-1:-1;;;;;;2055:435:8:o;2728:131::-;-1:-1:-1;;;;;2803:31:8;;2793:42;;2783:70;;2849:1;2846;2839:12;2864:319;2931:6;2939;2992:2;2980:9;2971:7;2967:23;2963:32;2960:52;;;3008:1;3005;2998:12;2960:52;3047:9;3034:23;3066:31;3091:5;3066:31;:::i;:::-;3116:5;-1:-1:-1;3140:37:8;3173:2;3158:18;;3140:37;:::i;:::-;3130:47;;2864:319;;;;;:::o;3380:127::-;3441:10;3436:3;3432:20;3429:1;3422:31;3472:4;3469:1;3462:15;3496:4;3493:1;3486:15;3512:253;3584:2;3578:9;3626:4;3614:17;;-1:-1:-1;;;;;3646:34:8;;3682:22;;;3643:62;3640:88;;;3708:18;;:::i;:::-;3744:2;3737:22;3512:253;:::o;3770:274::-;3842:2;3836:9;;;3872:38;;-1:-1:-1;;;;;3925:34:8;;3961:22;;;3922:62;3919:88;;;3987:18;;:::i;4328:275::-;4399:2;4393:9;4464:2;4445:13;;-1:-1:-1;;4441:27:8;4429:40;;-1:-1:-1;;;;;4484:34:8;;4520:22;;;4481:62;4478:88;;;4546:18;;:::i;:::-;4582:2;4575:22;4328:275;;-1:-1:-1;4328:275:8:o;4608:712::-;4662:5;4715:3;4708:4;4700:6;4696:17;4692:27;4682:55;;4733:1;4730;4723:12;4682:55;4769:6;4756:20;4795:4;-1:-1:-1;;;;;4814:2:8;4811:26;4808:52;;;4840:18;;:::i;:::-;4886:2;4883:1;4879:10;4909:28;4933:2;4929;4925:11;4909:28;:::i;:::-;4971:15;;;5041;;;5037:24;;;5002:12;;;;5073:15;;;5070:35;;;5101:1;5098;5091:12;5070:35;5137:2;5129:6;5125:15;5114:26;;5149:142;5165:6;5160:3;5157:15;5149:142;;;5231:17;;5219:30;;5182:12;;;;5269;;;;5149:142;;;5309:5;4608:712;-1:-1:-1;;;;;;;4608:712:8:o;5325:484::-;5375:5;5428:3;5421:4;5413:6;5409:17;5405:27;5395:55;;5446:1;5443;5436:12;5395:55;5470:22;;:::i;:::-;5514:3;5552:2;5544:6;5540:15;5578:3;5570:6;5567:15;5564:35;;;5595:1;5592;5585:12;5564:35;5619:6;5634:146;5650:6;5645:3;5642:15;5634:146;;;5718:17;;5706:30;;5765:4;5756:14;;;;5667;5634:146;;;-1:-1:-1;5798:5:8;;5325:484;-1:-1:-1;;;;;5325:484:8:o;5814:1200::-;6025:6;6033;6041;6049;6057;6110:3;6098:9;6089:7;6085:23;6081:33;6078:53;;;6127:1;6124;6117:12;6078:53;6150:28;6168:9;6150:28;:::i;:::-;6140:38;;6197:2;6250;6239:9;6235:18;6222:32;-1:-1:-1;;;;;6269:6:8;6266:30;6263:50;;;6309:1;6306;6299:12;6263:50;6332:61;6385:7;6376:6;6365:9;6361:22;6332:61;:::i;:::-;6322:71;;;6412:2;6433:53;6478:7;6473:2;6462:9;6458:18;6433:53;:::i;:::-;6423:63;;6530:7;6524:3;6513:9;6509:19;6505:33;6495:61;;6552:1;6549;6542:12;6495:61;6576:22;;:::i;:::-;6620:3;6661;6650:9;6646:19;6688:7;6680:6;6677:19;6674:39;;;6709:1;6706;6699:12;6674:39;6748:3;6737:9;6733:19;6761:163;6777:6;6772:3;6769:15;6761:163;;;6843:38;6873:7;6868:3;6843:38;:::i;:::-;6831:51;;6902:12;;;;6794;;6761:163;;;6765:3;6943:5;6933:15;;6967:41;7000:7;6992:6;6967:41;:::i;:::-;6957:51;;;;;;;5814:1200;;;;;;;;:::o;7019:435::-;7072:3;7110:5;7104:12;7137:6;7132:3;7125:19;7163:4;7192:2;7187:3;7183:12;7176:19;;7229:2;7222:5;7218:14;7250:1;7260:169;7274:6;7271:1;7268:13;7260:169;;;7335:13;;7323:26;;7369:12;;;;7404:15;;;;7296:1;7289:9;7260:169;;;-1:-1:-1;7445:3:8;;7019:435;-1:-1:-1;;;;;7019:435:8:o;7459:730::-;7646:2;7635:9;7628:21;7691:6;7685:13;7680:2;7669:9;7665:18;7658:41;7753:2;7745:6;7741:15;7735:22;7730:2;7719:9;7715:18;7708:50;7812:2;7804:6;7800:15;7794:22;7789:2;7778:9;7774:18;7767:50;7609:4;7864:2;7856:6;7852:15;7846:22;7905:4;7899:3;7888:9;7884:19;7877:33;7933:63;7991:3;7980:9;7976:19;7962:12;7933:63;:::i;:::-;7919:77;;8045:3;8037:6;8033:16;8027:23;8120:2;8116:7;8104:9;8096:6;8092:22;8088:36;8081:4;8070:9;8066:20;8059:66;8142:41;8176:6;8160:14;8142:41;:::i;:::-;8134:49;7459:730;-1:-1:-1;;;;;7459:730:8:o;8194:247::-;8253:6;8306:2;8294:9;8285:7;8281:23;8277:32;8274:52;;;8322:1;8319;8312:12;8274:52;8361:9;8348:23;8380:31;8405:5;8380:31;:::i;8628:1640::-;8758:6;8766;8774;8827:2;8815:9;8806:7;8802:23;8798:32;8795:52;;;8843:1;8840;8833:12;8795:52;8866:28;8884:9;8866:28;:::i;:::-;8856:38;;8913:2;8965;8954:9;8950:18;8937:32;8978:31;9003:5;8978:31;:::i;:::-;9028:5;-1:-1:-1;9084:2:8;9069:18;;9056:32;-1:-1:-1;;;;;9137:14:8;;;9134:34;;;9164:1;9161;9154:12;9134:34;9187:22;;;;9243:4;9225:16;;;9221:27;9218:47;;;9261:1;9258;9251:12;9218:47;9289:22;;:::i;:::-;9349:2;9336:16;9327:7;9320:33;9408:2;9404;9400:11;9387:25;9382:2;9373:7;9369:16;9362:51;9468:2;9464;9460:11;9447:25;9442:2;9433:7;9429:16;9422:51;9519:2;9515;9511:11;9498:25;9548:2;9538:8;9535:16;9532:36;;;9564:1;9561;9554:12;9532:36;9602:56;9650:7;9639:8;9635:2;9631:17;9602:56;:::i;:::-;9597:2;9588:7;9584:16;9577:82;;9705:3;9701:2;9697:12;9684:26;9735:2;9725:8;9722:16;9719:36;;;9751:1;9748;9741:12;9719:36;9782:8;9778:2;9774:17;9764:27;;;9829:7;9822:4;9818:2;9814:13;9810:27;9800:55;;9851:1;9848;9841:12;9800:55;9887:2;9874:16;9909:2;9905;9902:10;9899:36;;;9915:18;;:::i;:::-;9957:53;10000:2;9981:13;;-1:-1:-1;;9977:27:8;9973:36;;9957:53;:::i;:::-;9944:66;;10033:2;10026:5;10019:17;10073:7;10068:2;10063;10059;10055:11;10051:20;10048:33;10045:53;;;10094:1;10091;10084:12;10045:53;10149:2;10144;10140;10136:11;10131:2;10124:5;10120:14;10107:45;10193:1;10188:2;10183;10176:5;10172:14;10168:23;10161:34;;10230:5;10224:3;10215:7;10211:17;10204:32;10255:7;10245:17;;;;;;8628:1640;;;;;:::o;10273:380::-;10352:1;10348:12;;;;10395;;;10416:61;;10470:4;10462:6;10458:17;10448:27;;10416:61;10523:2;10515:6;10512:14;10492:18;10489:38;10486:161;;10569:10;10564:3;10560:20;10557:1;10550:31;10604:4;10601:1;10594:15;10632:4;10629:1;10622:15;10486:161;;10273:380;;;:::o;11472:326::-;11565:5;11588:1;11598:194;11612:4;11609:1;11606:11;11598:194;;;11671:13;;11659:26;;11708:4;11732:12;;;;11767:15;;;;11632:1;11625:9;11598:194;;11940:772;11990:3;12031:5;12025:12;12060:36;12086:9;12060:36;:::i;:::-;12105:19;;;12143:4;12166:1;12183:18;;;12210:146;;;;12370:1;12365:341;;;;12176:530;;12210:146;-1:-1:-1;;12252:24:8;;12238:12;;;12231:46;12324:14;;12317:22;12314:1;12310:30;12301:40;;12297:49;;;-1:-1:-1;12210:146:8;;12365:341;12396:5;12393:1;12386:16;12443:2;12440:1;12430:16;12468:1;12482:174;12496:6;12493:1;12490:13;12482:174;;;12583:14;;12565:11;;;12561:20;;12554:44;12626:16;;;;12511:10;;12482:174;;;12680:11;;12676:20;;;-1:-1:-1;;12176:530:8;;;;;;11940:772;;;;:::o;12717:1991::-;13210:4;13239:3;13269:2;13258:9;13251:21;13295:56;13347:2;13336:9;13332:18;13324:6;13295:56;:::i;:::-;13281:70;;13370:2;13381:52;13429:2;13418:9;13414:18;13406:6;13381:52;:::i;:::-;13468:2;13457:9;13453:18;13513:6;13537:1;13547:187;13561:4;13558:1;13555:11;13547:187;;;13608:44;13648:3;13639:6;13633:13;13608:44;:::i;:::-;13681:4;13672:14;;;;;13709:15;;;;13581:1;13574:9;13547:187;;;13551:3;;;13743:53;13791:3;13780:9;13776:19;13768:6;13743:53;:::i;:::-;13833:22;;;13827:3;13812:19;;13805:51;13920:13;;13905:29;;13953:1;13993:15;;;13987:22;13970:15;;;13963:47;14063:4;14051:17;;14045:24;14038:4;14026:17;;14019:51;13891:4;14144:2;14132:15;;14125:29;;;14111:4;14099:17;;14205:19;;13879:17;;;14233:22;;;-1:-1:-1;14298:23:8;;;14346:16;;;;13953:1;14285:3;14273:16;;;14392:188;14408:6;14403:3;14400:15;14392:188;;;14476:15;;14462:30;;14553:17;;;;14425:12;;;;14514:14;;;;14392:188;;;14396:3;14626:6;14619:5;14615:18;14608:4;14600:6;14596:17;14589:45;14651:51;14696:5;14689:4;14681:6;14677:17;14651:51;:::i;:::-;14643:59;12717:1991;-1:-1:-1;;;;;;;;;;;;;12717:1991:8:o;14713:277::-;14780:6;14833:2;14821:9;14812:7;14808:23;14804:32;14801:52;;;14849:1;14846;14839:12;14801:52;14881:9;14875:16;14934:5;14927:13;14920:21;14913:5;14910:32;14900:60;;14956:1;14953;14946:12;15758:545;15860:2;15855:3;15852:11;15849:448;;;15896:1;15921:5;15917:2;15910:17;15966:4;15962:2;15952:19;16036:2;16024:10;16020:19;16017:1;16013:27;16007:4;16003:38;16072:4;16060:10;16057:20;16054:47;;;-1:-1:-1;16095:4:8;16054:47;16150:2;16145:3;16141:12;16138:1;16134:20;16128:4;16124:31;16114:41;;16205:82;16223:2;16216:5;16213:13;16205:82;;;16268:17;;;16249:1;16238:13;16205:82;;;16209:3;;;15849:448;15758:545;;;:::o;16479:1363::-;16605:3;16599:10;-1:-1:-1;;;;;16624:6:8;16621:30;16618:56;;;16654:18;;:::i;:::-;16683:97;16773:6;16733:38;16765:4;16759:11;16733:38;:::i;:::-;16727:4;16683:97;:::i;:::-;16835:4;;16899:2;16888:14;;16916:1;16911:674;;;;17629:1;17646:6;17643:89;;;-1:-1:-1;17698:19:8;;;17692:26;17643:89;-1:-1:-1;;16436:1:8;16432:11;;;16428:24;16424:29;16414:40;16460:1;16456:11;;;16411:57;17745:81;;16881:955;;16911:674;11887:1;11880:14;;;11924:4;11911:18;;-1:-1:-1;;16947:20:8;;;17076:236;17090:7;17087:1;17084:14;17076:236;;;17179:19;;;17173:26;17158:42;;17271:27;;;;17239:1;17227:14;;;;17106:19;;17076:236;;;17080:3;17340:6;17331:7;17328:19;17325:201;;;17401:19;;;17395:26;-1:-1:-1;;17484:1:8;17480:14;;;17496:3;17476:24;17472:37;17468:42;17453:58;17438:74;;17325:201;-1:-1:-1;;;;;17572:1:8;17556:14;;;17552:22;17539:36;;-1:-1:-1;16479:1363:8:o;18208:184::-;18278:6;18331:2;18319:9;18310:7;18306:23;18302:32;18299:52;;;18347:1;18344;18337:12;18299:52;-1:-1:-1;18370:16:8;;18208:184;-1:-1:-1;18208:184:8:o;18397:127::-;18458:10;18453:3;18449:20;18446:1;18439:31;18489:4;18486:1;18479:15;18513:4;18510:1;18503:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "TRANSFER_REQUEST_ID()": "63ec508f",
    "addressToId(address)": "cb0e0d7d",
    "getSupportedRequests()": "37ba9523",
    "getZKPRequest(uint64)": "c76d0845",
    "idToAddress(uint256)": "2a2d0c47",
    "owner()": "8da5cb5b",
    "proofs(address,uint64)": "b45c0fdf",
    "renounceOwnership()": "715018a6",
    "requestQueries(uint64)": "96bf4741",
    "requestValidators(uint64)": "a8723114",
    "setZKPRequest(uint64,address,(uint256,uint256,uint256,uint256[],string))": "fee207e6",
    "submitZKPResponse(uint64,uint256[],uint256[2],uint256[2][2],uint256[2])": "b68967e2",
    "supportedRequests(uint256)": "f1435326",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TRANSFER_REQUEST_ID\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedRequests\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"arr\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"}],\"name\":\"getZKPRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"idToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"proofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestQueries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"requestValidators\",\"outputs\":[{\"internalType\":\"contract ICircuitValidator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"contract ICircuitValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"schema\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slotIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"operator\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"circuitId\",\"type\":\"string\"}],\"internalType\":\"struct ICircuitValidator.CircuitQuery\",\"name\":\"query\",\"type\":\"tuple\"}],\"name\":\"setZKPRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"requestId\",\"type\":\"uint64\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"}],\"name\":\"submitZKPResponse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedRequests\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/GameVerifier.sol\":\"GameVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/BytesLib.sol\":{\"keccak256\":\"0x87304e909cf7a00ad8d6f04f5121594cc2b691d54b6e6e7952e75da4f773e0dc\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://217d9b8fdf8466a1bf7ae4740fb91017409d6ae257516162456abc9d29bf827d\",\"dweb:/ipfs/QmTBJFb6uDMruYYqpdBHSQioW9EsaYnWFUAkCxdYTs4Qc5\"]},\"src/Context.sol\":{\"keccak256\":\"0x7b694499aa00247510eb31e06a4def5eeda44f5ebe5b32cb746f15e59d378ed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0655431a097bc5b99e74d279233a74c2ac0c3aec4b35292ec195030ebffc4d2d\",\"dweb:/ipfs/QmP8zrYXpT58VX8rypDzmwQbadsdR19n9GXbH4yYNXu97w\"]},\"src/GameVerifier.sol\":{\"keccak256\":\"0xc78c7789b9a3f60ef88d2ee2df6c0e5f84304702b8f2e7bf0c733e6c0dd7a171\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8971e20a868b69ff98032b7e220ab0f380bdd2b29a376d9294f85c6869b8e7ed\",\"dweb:/ipfs/QmRycZCNbfrBWU7yH8uherWCBiHv3fVvytTDHdKrL7n8dB\"]},\"src/GenesisUtils.sol\":{\"keccak256\":\"0xe4c87c081f668b60f044aa36256acc330af784d90f60b477169ff46ccf7e9495\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1116224a11a9cc1b8a766ed7cfbbc42a110d0f00e4d050606766cc84afa7b1f\",\"dweb:/ipfs/QmfDoPCRQwqov1DY8aYFehWWVeLV4hQNhbxNnb19XnbnjF\"]},\"src/ICircuitValidator.sol\":{\"keccak256\":\"0x4797a01334cc903dea4f8fff0958c67036dec7c938e2f615206c1b75cb2883a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f09acc807fb2c1a6004086de045d921f7731b7c57ffc62a53094a25d43cd77d4\",\"dweb:/ipfs/QmfMTu1CrvvAMNKYGhhg7Txj1LpaeVHDfT2XrDzhuw6ZmL\"]},\"src/IZKPVerifier.sol\":{\"keccak256\":\"0xf5d7df1fb74c73eb8a4857d700c21b7de3f4113bb2a180a0a8552107f2248a85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce50ba3d4e9f8c5aa96246b8be606da33cce7aa943c60a1092b364ed5d64c151\",\"dweb:/ipfs/QmagqQZqC2wdvuCpGw1ZEn6jG9J8VeiR2MFk2tzQ1ELDmv\"]},\"src/Ownable.sol\":{\"keccak256\":\"0x8f062c949816575634f989e3135f9b3788f5cfeacb7ecc50596594d52be6ad0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc4fbac2b610528dc9376ae00ca504f4938acc324a9dafb260b1a7890c2ec34f\",\"dweb:/ipfs/QmS2gkdDnMGAVgccwAPj7MWpt2eq96aMHVuevgtVyLXbmC\"]},\"src/ZKPVerifier.sol\":{\"keccak256\":\"0xbfc1c194292e857de2ac2c89abb260ad4ce43e133efc08df7bfde6c62a25fd8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e8cdddb192543fdf42b07850805d21d170cdede6529c176dbf09b91932242b5\",\"dweb:/ipfs/QmV7ouRV8WfuLS22M1hmXKSGfF2tY9FvghvRCfU5Bkyo14\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TRANSFER_REQUEST_ID",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressToId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedRequests",
          "outputs": [
            {
              "internalType": "uint64[]",
              "name": "arr",
              "type": "uint64[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getZKPRequest",
          "outputs": [
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "idToAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proofs",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestQueries",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "schema",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "slotIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "operator",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "circuitId",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "requestValidators",
          "outputs": [
            {
              "internalType": "contract ICircuitValidator",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "contract ICircuitValidator",
              "name": "validator",
              "type": "address"
            },
            {
              "internalType": "struct ICircuitValidator.CircuitQuery",
              "name": "query",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "schema",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "slotIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "operator",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "value",
                  "type": "uint256[]"
                },
                {
                  "internalType": "string",
                  "name": "circuitId",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setZKPRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "requestId",
              "type": "uint64"
            },
            {
              "internalType": "uint256[]",
              "name": "inputs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[2]",
              "name": "a",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256[2][2]",
              "name": "b",
              "type": "uint256[2][2]"
            },
            {
              "internalType": "uint256[2]",
              "name": "c",
              "type": "uint256[2]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitZKPResponse",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportedRequests",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/GameVerifier.sol": "GameVerifier"
      },
      "libraries": {}
    },
    "sources": {
      "src/BytesLib.sol": {
        "keccak256": "0x87304e909cf7a00ad8d6f04f5121594cc2b691d54b6e6e7952e75da4f773e0dc",
        "urls": [
          "bzz-raw://217d9b8fdf8466a1bf7ae4740fb91017409d6ae257516162456abc9d29bf827d",
          "dweb:/ipfs/QmTBJFb6uDMruYYqpdBHSQioW9EsaYnWFUAkCxdYTs4Qc5"
        ],
        "license": "Unlicense"
      },
      "src/Context.sol": {
        "keccak256": "0x7b694499aa00247510eb31e06a4def5eeda44f5ebe5b32cb746f15e59d378ed9",
        "urls": [
          "bzz-raw://0655431a097bc5b99e74d279233a74c2ac0c3aec4b35292ec195030ebffc4d2d",
          "dweb:/ipfs/QmP8zrYXpT58VX8rypDzmwQbadsdR19n9GXbH4yYNXu97w"
        ],
        "license": "MIT"
      },
      "src/GameVerifier.sol": {
        "keccak256": "0xc78c7789b9a3f60ef88d2ee2df6c0e5f84304702b8f2e7bf0c733e6c0dd7a171",
        "urls": [
          "bzz-raw://8971e20a868b69ff98032b7e220ab0f380bdd2b29a376d9294f85c6869b8e7ed",
          "dweb:/ipfs/QmRycZCNbfrBWU7yH8uherWCBiHv3fVvytTDHdKrL7n8dB"
        ],
        "license": "MIT"
      },
      "src/GenesisUtils.sol": {
        "keccak256": "0xe4c87c081f668b60f044aa36256acc330af784d90f60b477169ff46ccf7e9495",
        "urls": [
          "bzz-raw://b1116224a11a9cc1b8a766ed7cfbbc42a110d0f00e4d050606766cc84afa7b1f",
          "dweb:/ipfs/QmfDoPCRQwqov1DY8aYFehWWVeLV4hQNhbxNnb19XnbnjF"
        ],
        "license": "GPL-3.0"
      },
      "src/ICircuitValidator.sol": {
        "keccak256": "0x4797a01334cc903dea4f8fff0958c67036dec7c938e2f615206c1b75cb2883a9",
        "urls": [
          "bzz-raw://f09acc807fb2c1a6004086de045d921f7731b7c57ffc62a53094a25d43cd77d4",
          "dweb:/ipfs/QmfMTu1CrvvAMNKYGhhg7Txj1LpaeVHDfT2XrDzhuw6ZmL"
        ],
        "license": "MIT"
      },
      "src/IZKPVerifier.sol": {
        "keccak256": "0xf5d7df1fb74c73eb8a4857d700c21b7de3f4113bb2a180a0a8552107f2248a85",
        "urls": [
          "bzz-raw://ce50ba3d4e9f8c5aa96246b8be606da33cce7aa943c60a1092b364ed5d64c151",
          "dweb:/ipfs/QmagqQZqC2wdvuCpGw1ZEn6jG9J8VeiR2MFk2tzQ1ELDmv"
        ],
        "license": "MIT"
      },
      "src/Ownable.sol": {
        "keccak256": "0x8f062c949816575634f989e3135f9b3788f5cfeacb7ecc50596594d52be6ad0f",
        "urls": [
          "bzz-raw://fc4fbac2b610528dc9376ae00ca504f4938acc324a9dafb260b1a7890c2ec34f",
          "dweb:/ipfs/QmS2gkdDnMGAVgccwAPj7MWpt2eq96aMHVuevgtVyLXbmC"
        ],
        "license": "MIT"
      },
      "src/ZKPVerifier.sol": {
        "keccak256": "0xbfc1c194292e857de2ac2c89abb260ad4ce43e133efc08df7bfde6c62a25fd8f",
        "urls": [
          "bzz-raw://1e8cdddb192543fdf42b07850805d21d170cdede6529c176dbf09b91932242b5",
          "dweb:/ipfs/QmV7ouRV8WfuLS22M1hmXKSGfF2tY9FvghvRCfU5Bkyo14"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/GameVerifier.sol",
    "id": 448,
    "exportedSymbols": {
      "BytesLib": [
        332
      ],
      "Context": [
        354
      ],
      "GameVerifier": [
        447
      ],
      "GenesisUtils": [
        847
      ],
      "ICircuitValidator": [
        902
      ],
      "IZKPVerifier": [
        951
      ],
      "Ownable": [
        1064
      ],
      "ZKPVerifier": [
        1326
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:955:2",
    "nodes": [
      {
        "id": 356,
        "nodeType": "PragmaDirective",
        "src": "32:23:2",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 357,
        "nodeType": "ImportDirective",
        "src": "57:27:2",
        "nodes": [],
        "absolutePath": "src/ZKPVerifier.sol",
        "file": "./ZKPVerifier.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 448,
        "sourceUnit": 1327,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 358,
        "nodeType": "ImportDirective",
        "src": "85:28:2",
        "nodes": [],
        "absolutePath": "src/GenesisUtils.sol",
        "file": "./GenesisUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 448,
        "sourceUnit": 848,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 359,
        "nodeType": "ImportDirective",
        "src": "114:33:2",
        "nodes": [],
        "absolutePath": "src/ICircuitValidator.sol",
        "file": "./ICircuitValidator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 448,
        "sourceUnit": 903,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 447,
        "nodeType": "ContractDefinition",
        "src": "149:838:2",
        "nodes": [
          {
            "id": 364,
            "nodeType": "VariableDeclaration",
            "src": "191:46:2",
            "nodes": [],
            "constant": true,
            "functionSelector": "63ec508f",
            "mutability": "constant",
            "name": "TRANSFER_REQUEST_ID",
            "nameLocation": "214:19:2",
            "scope": 447,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 362,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "191:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 363,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "236:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 368,
            "nodeType": "VariableDeclaration",
            "src": "242:46:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "2a2d0c47",
            "mutability": "mutable",
            "name": "idToAddress",
            "nameLocation": "277:11:2",
            "scope": 447,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 367,
              "keyType": {
                "id": 365,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "250:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "242:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 366,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 372,
            "nodeType": "VariableDeclaration",
            "src": "292:46:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "cb0e0d7d",
            "mutability": "mutable",
            "name": "addressToId",
            "nameLocation": "327:11:2",
            "scope": 447,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 371,
              "keyType": {
                "id": 369,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "300:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "292:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 370,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 404,
            "nodeType": "FunctionDefinition",
            "src": "348:288:2",
            "nodes": [],
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "461:175:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nameLocation": "475:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "467:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 394,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 388,
                          "name": "inputs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "512:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 392,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 389,
                              "name": "validator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "519:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                                "typeString": "contract ICircuitValidator"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "529:22:2",
                            "memberName": "getChallengeInputIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 896,
                            "src": "519:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure external returns (uint256)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "519:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "512:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 386,
                        "name": "GenesisUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "483:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GenesisUtils_$847_$",
                          "typeString": "type(library GenesisUtils)"
                        }
                      },
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "496:15:2",
                      "memberName": "int256ToAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 846,
                      "src": "483:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) pure returns (address)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "467:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "569:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "573:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "569:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 398,
                          "name": "_addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "583:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "569:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6164647265737320696e2070726f6f66206973206e6f742073656e6465722061646472657373",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "590:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de6e1f152e74ae8182ccba1aacc6808642ce64bdfd10aa7a13bbbe30abcdc919",
                          "typeString": "literal_string \"address in proof is not sender address\""
                        },
                        "value": "address in proof is not sender address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de6e1f152e74ae8182ccba1aacc6808642ce64bdfd10aa7a13bbbe30abcdc919",
                          "typeString": "literal_string \"address in proof is not sender address\""
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "561:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "561:70:2"
                }
              ]
            },
            "baseFunctions": [
              1312
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeProofSubmit",
            "nameLocation": "357:18:2",
            "overrides": {
              "id": 382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "452:8:2"
            },
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "376:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 377,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "401:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "384:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 375,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "384:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 376,
                    "nodeType": "ArrayTypeName",
                    "src": "384:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "427:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "409:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 378,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "409:17:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 902,
                      "src": "409:17:2"
                    },
                    "referencedDeclaration": 902,
                    "src": "409:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:62:2"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:2"
            },
            "scope": 447,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 446,
            "nodeType": "FunctionDefinition",
            "src": "640:340:2",
            "nodes": [],
            "body": {
              "id": 445,
              "nodeType": "Block",
              "src": "757:223:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 417,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "771:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 418,
                            "name": "TRANSFER_REQUEST_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "784:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "771:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 420,
                              "name": "addressToId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "807:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "expression": {
                                "id": 421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "819:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "823:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "819:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "807:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "834:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "807:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "771:64:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f662063616e6e6f74206265207375626d6974746564206d6f7265207468616e206f6e6365",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acd2a42ec605dcb726451484e861e00edaf61dd0acef1dd163e5936cface71ce",
                          "typeString": "literal_string \"proof cannot be submitted more than once\""
                        },
                        "value": "proof cannot be submitted more than once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_acd2a42ec605dcb726451484e861e00edaf61dd0acef1dd163e5936cface71ce",
                          "typeString": "literal_string \"proof cannot be submitted more than once\""
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "763:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "763:117:2"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "894:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "886:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "886:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 437,
                  "initialValue": {
                    "baseExpression": {
                      "id": 432,
                      "name": "inputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "899:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 436,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 433,
                          "name": "validator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 412,
                          "src": "906:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                            "typeString": "contract ICircuitValidator"
                          }
                        },
                        "id": 434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "916:22:2",
                        "memberName": "getChallengeInputIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 896,
                        "src": "906:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_uint256_$",
                          "typeString": "function () pure external returns (uint256)"
                        }
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "906:34:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "899:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "886:55:2"
                },
                {
                  "expression": {
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 438,
                        "name": "idToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "947:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 440,
                      "indexExpression": {
                        "id": 439,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "959:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "947:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 441,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "965:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "969:6:2",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "965:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "947:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "947:28:2"
                }
              ]
            },
            "baseFunctions": [
              1325
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterProofSubmit",
            "nameLocation": "649:17:2",
            "overrides": {
              "id": 414,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "748:8:2"
            },
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "674:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "667:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "inputs",
                  "nameLocation": "702:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "685:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 407,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "685:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 408,
                    "nodeType": "ArrayTypeName",
                    "src": "685:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "728:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "710:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                    "typeString": "contract ICircuitValidator"
                  },
                  "typeName": {
                    "id": 411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 410,
                      "name": "ICircuitValidator",
                      "nameLocations": [
                        "710:17:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 902,
                      "src": "710:17:2"
                    },
                    "referencedDeclaration": 902,
                    "src": "710:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICircuitValidator_$902",
                      "typeString": "contract ICircuitValidator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "666:72:2"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:0:2"
            },
            "scope": 447,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 360,
              "name": "ZKPVerifier",
              "nameLocations": [
                "174:11:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1326,
              "src": "174:11:2"
            },
            "id": 361,
            "nodeType": "InheritanceSpecifier",
            "src": "174:11:2"
          }
        ],
        "canonicalName": "GameVerifier",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          447,
          1326,
          1064,
          354,
          951
        ],
        "name": "GameVerifier",
        "nameLocation": "158:12:2",
        "scope": 448,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 2
}