{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IWorldID",
          "name": "_worldId",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidNullifier",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "input",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "root",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nullifierHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[8]",
          "name": "proof",
          "type": "uint256[8]"
        }
      ],
      "name": "verifyAndExecute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x7f7769645f73746167696e675f6263636565383463313161313066656531653366610100526b63666231616134653463666160a01b61012052602c60e090815261012c6040526100599061009d602090811b61018317901c565b60a052600160c05234801561006d57600080fd5b5060405161045f38038061045f83398101604081905261008c916100d2565b6001600160a01b0316608052610131565b60006008826040516020016100b29190610102565b60408051601f198184030181529190528051602090910120901c92915050565b6000602082840312156100e457600080fd5b81516001600160a01b03811681146100fb57600080fd5b9392505050565b6000825160005b818110156101235760208186018101518583015201610109565b506000920191825250919050565b60805160a05160c05161030261015d600039600060a70152600060f301526000607701526103026000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806373475b4814610030575b600080fd5b61004361003e3660046101b8565b610045565b005b60008281526020819052604090205460ff161561007557604051632ec8265960e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bc778e3847f00000000000000000000000000000000000000000000000000000000000000006100f089896040516020016100dc929190610255565b604051602081830303815290604052610183565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b815260040161013496959493929190610265565b60006040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b50505060009283525050602081905260409020805460ff19166001179055505050565b6000600882604051602001610198919061029d565b60408051601f198184030181529190528051602090910120901c92915050565b60008060008060006101608087890312156101d257600080fd5b863567ffffffffffffffff808211156101ea57600080fd5b818901915089601f8301126101fe57600080fd5b81358181111561020d57600080fd5b8a602082850101111561021f57600080fd5b6020928301985096505087013593506040870135925080870188101561024457600080fd5b506060860190509295509295909350565b8183823760009101908152919050565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a0840137979650505050505050565b6000825160005b818110156102be57602081860181015185830152016102a4565b50600092019182525091905056fea26469706673582212200782b9a14e2386370fca37b51d29d9d5de7cb7c4665da1d3f8aad204ba7c302264736f6c63430008100033",
    "sourceMap": "228:34:8:-:0;717:64:6;216:47:8;-1:-1:-1;;;279:12:8;272:36;717:64:6;144:2256;717:64;;;324:12:8;-1:-1:-1;717:64:6;:78;;:76;-1:-1:-1;717:76:6;;;;;:78;;:::i;:::-;679:116;;873:1;836:38;;1096:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1133:18:6;;;144:2256;;301:145:5;365:7;438:1;426:5;409:23;;;;;;;;:::i;:::-;;;;-1:-1:-1;;409:23:5;;;;;;;;;399:34;;409:23;399:34;;;;391:48;;;301:145;-1:-1:-1;;301:145:5:o;347:306:8:-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;528:16;;-1:-1:-1;;;;;573:31:8;;563:42;;553:70;;619:1;616;609:12;553:70;642:5;347:306;-1:-1:-1;;;347:306:8:o;658:412::-;787:3;825:6;819:13;850:1;860:129;874:6;871:1;868:13;860:129;;;972:4;956:14;;;952:25;;946:32;933:11;;;926:53;889:12;860:129;;;-1:-1:-1;1044:1:8;1008:16;;1033:13;;;-1:-1:-1;1008:16:8;658:412;-1:-1:-1;658:412:8:o;:::-;144:2256:6;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806373475b4814610030575b600080fd5b61004361003e3660046101b8565b610045565b005b60008281526020819052604090205460ff161561007557604051632ec8265960e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633bc778e3847f00000000000000000000000000000000000000000000000000000000000000006100f089896040516020016100dc929190610255565b604051602081830303815290604052610183565b867f0000000000000000000000000000000000000000000000000000000000000000876040518763ffffffff1660e01b815260040161013496959493929190610265565b60006040518083038186803b15801561014c57600080fd5b505afa158015610160573d6000803e3d6000fd5b50505060009283525050602081905260409020805460ff19166001179055505050565b6000600882604051602001610198919061029d565b60408051601f198184030181529190528051602090910120901c92915050565b60008060008060006101608087890312156101d257600080fd5b863567ffffffffffffffff808211156101ea57600080fd5b818901915089601f8301126101fe57600080fd5b81358181111561020d57600080fd5b8a602082850101111561021f57600080fd5b6020928301985096505087013593506040870135925080870188101561024457600080fd5b506060860190509295509295909350565b8183823760009101908152919050565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a0840137979650505050505050565b6000825160005b818110156102be57602081860181015185830152016102a4565b50600092019182525091905056fea26469706673582212200782b9a14e2386370fca37b51d29d9d5de7cb7c4665da1d3f8aad204ba7c302264736f6c63430008100033",
    "sourceMap": "144:2256:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:738;;;;;;:::i;:::-;;:::i;:::-;;;1873:15;:30;;;;;;;;;;;;;1869:61;;;1912:18;;-1:-1:-1;;;1912:18:6;;;;;;;;;;;1869:61;2035:7;-1:-1:-1;;;;;2035:19:6;;2062:4;2074:7;2089:37;2106:5;;2089:23;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;:37::i;:::-;2134:13;2155:8;2171:5;2035:147;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2282:15:6;:30;;;-1:-1:-1;;2282:30:6;;;;;;;:37;;-1:-1:-1;;2282:37:6;2315:4;2282:37;;;-1:-1:-1;;;1660:738:6:o;301:145:5:-;365:7;438:1;426:5;409:23;;;;;;;;:::i;:::-;;;;-1:-1:-1;;409:23:5;;;;;;;;;399:34;;409:23;399:34;;;;391:48;;;301:145;-1:-1:-1;;301:145:5:o;14:895:8:-;137:6;145;153;161;169;200:3;244:2;232:9;223:7;219:23;215:32;212:52;;;260:1;257;250:12;212:52;300:9;287:23;329:18;370:2;362:6;359:14;356:34;;;386:1;383;376:12;356:34;424:6;413:9;409:22;399:32;;469:7;462:4;458:2;454:13;450:27;440:55;;491:1;488;481:12;440:55;531:2;518:16;557:2;549:6;546:14;543:34;;;573:1;570;563:12;543:34;620:7;613:4;604:6;600:2;596:15;592:26;589:39;586:59;;;641:1;638;631:12;586:59;672:4;664:13;;;;-1:-1:-1;696:6:8;-1:-1:-1;;734:20:8;;721:34;;-1:-1:-1;802:2:8;787:18;;774:32;;-1:-1:-1;821:18:8;;;818:31;-1:-1:-1;815:51:8;;;862:1;859;852:12;815:51;;900:2;889:9;885:18;875:28;;14:895;;;;;;;;:::o;914:273::-;1099:6;1091;1086:3;1073:33;1055:3;1125:16;;1150:13;;;1125:16;914:273;-1:-1:-1;914:273:8:o;1192:597::-;1472:4;1514:3;1503:9;1499:19;1491:27;;1545:6;1534:9;1527:25;1588:6;1583:2;1572:9;1568:18;1561:34;1631:6;1626:2;1615:9;1611:18;1604:34;1674:6;1669:2;1658:9;1654:18;1647:34;1718:6;1712:3;1701:9;1697:19;1690:35;1776:6;1768;1762:3;1751:9;1747:19;1734:49;1192:597;;;;;;;;;:::o;1794:412::-;1923:3;1961:6;1955:13;1986:1;1996:129;2010:6;2007:1;2004:13;1996:129;;;2108:4;2092:14;;;2088:25;;2082:32;2069:11;;;2062:53;2025:12;1996:129;;;-1:-1:-1;2180:1:8;2144:16;;2169:13;;;-1:-1:-1;2144:16:8;1794:412;-1:-1:-1;1794:412:8:o",
    "linkReferences": {},
    "immutableReferences": {
      "877": [
        {
          "start": 119,
          "length": 32
        }
      ],
      "886": [
        {
          "start": 243,
          "length": 32
        }
      ],
      "890": [
        {
          "start": 167,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "verifyAndExecute(string,uint256,uint256,uint256[8])": "73475b48"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IWorldID\",\"name\":\"_worldId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidNullifier\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyAndExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_worldId\":\"The WorldID instance that will verify the proofs\"}},\"verifyAndExecute(string,uint256,uint256,uint256[8])\":{\"details\":\"Feel free to rename this method however you want! We've used `claim`, `verify` or `execute` in the past.\",\"params\":{\"input\":\"User's input, used as the signal. Could be something else! (see README)\",\"nullifierHash\":\"The nullifier for this proof, preventing double signaling, returned by the SDK.\",\"proof\":\"The zero knowledge proof that demostrates the claimer is registered with World ID, returned by the SDK.\",\"root\":\"The of the Merkle tree, returned by the SDK.\"}}},\"stateVariables\":{\"actionId\":{\"details\":\"The application's action ID\"},\"groupId\":{\"details\":\"The WorldID group ID (1)\"},\"nullifierHashes\":{\"details\":\"Whether a nullifier hash has been used already. Used to prevent double-signaling\"},\"worldId\":{\"details\":\"The WorldID instance that will be used for verifying proofs\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidNullifier()\":[{\"notice\":\"Thrown when attempting to reuse a nullifier\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/worldcoin/Contract.sol\":\"Contract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/worldcoin/ByteHasher.sol\":{\"keccak256\":\"0x8f7efea43917a34ca391c8fe67c77277d53dadf7f2163a85caa88c148edebb91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://099a2236f60aa99228b6fb18ab4484d862ebac72fe765e45e0f527b8415c9a40\",\"dweb:/ipfs/QmPoBGewpGCMagaoCQdwsaGPXs4UrqYWLzbLNtaNRpjLKB\"]},\"src/worldcoin/Contract.sol\":{\"keccak256\":\"0x3e9f65b8f2d3d58bcc6c60c73fc17fa03f41876ac3ee63f9e07d8faeeea39744\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5948445bafc3cc3ddfccbf066ed938b5f8306c6100be93706b57a7712599ddbd\",\"dweb:/ipfs/QmfQUTf1hw7GWqGGi2JVP9JGb2dJ5TdEKj1ZX6Qoaoe6gq\"]},\"src/worldcoin/IWorldID.sol\":{\"keccak256\":\"0xd2f210c611e83f7f547dd191be3ff4d5e9d9a093d4f9fd9b945d52ef7564b335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://016d458239c46b282b308078bdbb575537983583b66f14a9253cf64282f30061\",\"dweb:/ipfs/Qmcw3n6671Dc2QLGXY3s18nZjcUCBN64NfL8YnUa4bF5it\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IWorldID",
              "name": "_worldId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNullifier"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "input",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "root",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nullifierHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256[8]",
              "name": "proof",
              "type": "uint256[8]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAndExecute"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_worldId": "The WorldID instance that will verify the proofs"
            }
          },
          "verifyAndExecute(string,uint256,uint256,uint256[8])": {
            "details": "Feel free to rename this method however you want! We've used `claim`, `verify` or `execute` in the past.",
            "params": {
              "input": "User's input, used as the signal. Could be something else! (see README)",
              "nullifierHash": "The nullifier for this proof, preventing double signaling, returned by the SDK.",
              "proof": "The zero knowledge proof that demostrates the claimer is registered with World ID, returned by the SDK.",
              "root": "The of the Merkle tree, returned by the SDK."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/worldcoin/Contract.sol": "Contract"
      },
      "libraries": {}
    },
    "sources": {
      "src/worldcoin/ByteHasher.sol": {
        "keccak256": "0x8f7efea43917a34ca391c8fe67c77277d53dadf7f2163a85caa88c148edebb91",
        "urls": [
          "bzz-raw://099a2236f60aa99228b6fb18ab4484d862ebac72fe765e45e0f527b8415c9a40",
          "dweb:/ipfs/QmPoBGewpGCMagaoCQdwsaGPXs4UrqYWLzbLNtaNRpjLKB"
        ],
        "license": "MIT"
      },
      "src/worldcoin/Contract.sol": {
        "keccak256": "0x3e9f65b8f2d3d58bcc6c60c73fc17fa03f41876ac3ee63f9e07d8faeeea39744",
        "urls": [
          "bzz-raw://5948445bafc3cc3ddfccbf066ed938b5f8306c6100be93706b57a7712599ddbd",
          "dweb:/ipfs/QmfQUTf1hw7GWqGGi2JVP9JGb2dJ5TdEKj1ZX6Qoaoe6gq"
        ],
        "license": "MIT"
      },
      "src/worldcoin/IWorldID.sol": {
        "keccak256": "0xd2f210c611e83f7f547dd191be3ff4d5e9d9a093d4f9fd9b945d52ef7564b335",
        "urls": [
          "bzz-raw://016d458239c46b282b308078bdbb575537983583b66f14a9253cf64282f30061",
          "dweb:/ipfs/Qmcw3n6671Dc2QLGXY3s18nZjcUCBN64NfL8YnUa4bF5it"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/worldcoin/Contract.sol",
    "id": 953,
    "exportedSymbols": {
      "ByteHasher": [
        861
      ],
      "Contract": [
        952
      ],
      "IWorldID": [
        973
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2368:6",
    "nodes": [
      {
        "id": 863,
        "nodeType": "PragmaDirective",
        "src": "32:23:6",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 865,
        "nodeType": "ImportDirective",
        "src": "57:44:6",
        "nodes": [],
        "absolutePath": "src/worldcoin/ByteHasher.sol",
        "file": "./ByteHasher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 953,
        "sourceUnit": 862,
        "symbolAliases": [
          {
            "foreign": {
              "id": 864,
              "name": "ByteHasher",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 861,
              "src": "65:10:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 867,
        "nodeType": "ImportDirective",
        "src": "102:40:6",
        "nodes": [],
        "absolutePath": "src/worldcoin/IWorldID.sol",
        "file": "./IWorldID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 953,
        "sourceUnit": 974,
        "symbolAliases": [
          {
            "foreign": {
              "id": 866,
              "name": "IWorldID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 973,
              "src": "110:8:6",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 952,
        "nodeType": "ContractDefinition",
        "src": "144:2256:6",
        "nodes": [
          {
            "id": 870,
            "nodeType": "UsingForDirective",
            "src": "166:27:6",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 868,
              "name": "ByteHasher",
              "nameLocations": [
                "172:10:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 861,
              "src": "172:10:6"
            },
            "typeName": {
              "id": 869,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "187:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 873,
            "nodeType": "ErrorDefinition",
            "src": "500:25:6",
            "nodes": [],
            "documentation": {
              "id": 871,
              "nodeType": "StructuredDocumentation",
              "src": "442:55:6",
              "text": "@notice Thrown when attempting to reuse a nullifier"
            },
            "errorSelector": "5d904cb2",
            "name": "InvalidNullifier",
            "nameLocation": "506:16:6",
            "parameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:6"
            }
          },
          {
            "id": 877,
            "nodeType": "VariableDeclaration",
            "src": "600:35:6",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "529:68:6",
              "text": "@dev The WorldID instance that will be used for verifying proofs"
            },
            "mutability": "immutable",
            "name": "worldId",
            "nameLocation": "628:7:6",
            "scope": 952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWorldID_$973",
              "typeString": "contract IWorldID"
            },
            "typeName": {
              "id": 876,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 875,
                "name": "IWorldID",
                "nameLocations": [
                  "600:8:6"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 973,
                "src": "600:8:6"
              },
              "referencedDeclaration": 973,
              "src": "600:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWorldID_$973",
                "typeString": "contract IWorldID"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 886,
            "nodeType": "VariableDeclaration",
            "src": "679:116:6",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 878,
              "nodeType": "StructuredDocumentation",
              "src": "640:36:6",
              "text": "@dev The application's action ID"
            },
            "mutability": "immutable",
            "name": "actionId",
            "nameLocation": "706:8:6",
            "scope": 952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 879,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "expression": {
                  "arguments": [
                    {
                      "hexValue": "7769645f73746167696e675f6263636565383463313161313066656531653366636662316161346534636661",
                      "id": 882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "734:46:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_785d2d96a6fc2217d5f7f5d0db83780dcf4f36b58163a6ff3b67091702d418bb",
                        "typeString": "literal_string \"wid_staging_bccee84c11a10fee1e3fcfb1aa4e4cfa\""
                      },
                      "value": "wid_staging_bccee84c11a10fee1e3fcfb1aa4e4cfa"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_785d2d96a6fc2217d5f7f5d0db83780dcf4f36b58163a6ff3b67091702d418bb",
                        "typeString": "literal_string \"wid_staging_bccee84c11a10fee1e3fcfb1aa4e4cfa\""
                      }
                    ],
                    "expression": {
                      "id": 880,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -1,
                      "src": "717:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "721:12:6",
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "717:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 883,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "717:64:6",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                },
                "id": 884,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "782:11:6",
                "memberName": "hashToField",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 860,
                "src": "717:76:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                  "typeString": "function (bytes memory) pure returns (uint256)"
                }
              },
              "id": 885,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "717:78:6",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 890,
            "nodeType": "VariableDeclaration",
            "src": "836:38:6",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 887,
              "nodeType": "StructuredDocumentation",
              "src": "800:33:6",
              "text": "@dev The WorldID group ID (1)"
            },
            "mutability": "immutable",
            "name": "groupId",
            "nameLocation": "863:7:6",
            "scope": 952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 888,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "836:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "873:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 895,
            "nodeType": "VariableDeclaration",
            "src": "971:49:6",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 891,
              "nodeType": "StructuredDocumentation",
              "src": "879:89:6",
              "text": "@dev Whether a nullifier hash has been used already. Used to prevent double-signaling"
            },
            "mutability": "mutable",
            "name": "nullifierHashes",
            "nameLocation": "1005:15:6",
            "scope": 952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 894,
              "keyType": {
                "id": 892,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "979:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "971:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 893,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "990:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 907,
            "nodeType": "FunctionDefinition",
            "src": "1096:60:6",
            "nodes": [],
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "1127:29:6",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 902,
                      "name": "worldId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 877,
                      "src": "1133:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWorldID_$973",
                        "typeString": "contract IWorldID"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 903,
                      "name": "_worldId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 899,
                      "src": "1143:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWorldID_$973",
                        "typeString": "contract IWorldID"
                      }
                    },
                    "src": "1133:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorldID_$973",
                      "typeString": "contract IWorldID"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:18:6"
                }
              ]
            },
            "documentation": {
              "id": 896,
              "nodeType": "StructuredDocumentation",
              "src": "1025:68:6",
              "text": "@param _worldId The WorldID instance that will verify the proofs"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 899,
                  "mutability": "mutable",
                  "name": "_worldId",
                  "nameLocation": "1117:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "1108:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWorldID_$973",
                    "typeString": "contract IWorldID"
                  },
                  "typeName": {
                    "id": 898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 897,
                      "name": "IWorldID",
                      "nameLocations": [
                        "1108:8:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 973,
                      "src": "1108:8:6"
                    },
                    "referencedDeclaration": 973,
                    "src": "1108:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWorldID_$973",
                      "typeString": "contract IWorldID"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:19:6"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:0:6"
            },
            "scope": 952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 951,
            "nodeType": "FunctionDefinition",
            "src": "1660:738:6",
            "nodes": [],
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "1800:598:6",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 921,
                      "name": "nullifierHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 895,
                      "src": "1873:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 923,
                    "indexExpression": {
                      "id": 922,
                      "name": "nullifierHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "1889:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1873:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 927,
                  "nodeType": "IfStatement",
                  "src": "1869:61:6",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 924,
                        "name": "InvalidNullifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1912:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1912:18:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 926,
                    "nodeType": "RevertStatement",
                    "src": "1905:25:6"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 931,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "2062:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 932,
                        "name": "groupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 890,
                        "src": "2074:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 935,
                                "name": "input",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 910,
                                "src": "2106:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "expression": {
                                "id": 933,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2089:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2093:12:6",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2089:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2089:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2113:11:6",
                          "memberName": "hashToField",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 860,
                          "src": "2089:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (uint256)"
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2089:37:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 939,
                        "name": "nullifierHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "2134:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 940,
                        "name": "actionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 886,
                        "src": "2155:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 941,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "2171:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                          "typeString": "uint256[8] calldata"
                        }
                      ],
                      "expression": {
                        "id": 928,
                        "name": "worldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "2035:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWorldID_$973",
                          "typeString": "contract IWorldID"
                        }
                      },
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2043:11:6",
                      "memberName": "verifyProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 972,
                      "src": "2035:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$8_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256,uint256,uint256[8] memory) view external"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:147:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:147:6"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 944,
                        "name": "nullifierHashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 895,
                        "src": "2282:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 946,
                      "indexExpression": {
                        "id": 945,
                        "name": "nullifierHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "2298:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2282:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2315:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2282:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "2282:37:6"
                }
              ]
            },
            "documentation": {
              "id": 908,
              "nodeType": "StructuredDocumentation",
              "src": "1160:497:6",
              "text": "@param input User's input, used as the signal. Could be something else! (see README)\n @param root The of the Merkle tree, returned by the SDK.\n @param nullifierHash The nullifier for this proof, preventing double signaling, returned by the SDK.\n @param proof The zero knowledge proof that demostrates the claimer is registered with World ID, returned by the SDK.\n @dev Feel free to rename this method however you want! We've used `claim`, `verify` or `execute` in the past."
            },
            "functionSelector": "73475b48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAndExecute",
            "nameLocation": "1669:16:6",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 910,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "1707:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "1691:21:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "1726:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "1718:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "nullifierHash",
                  "nameLocation": "1744:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "1736:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1783:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "1763:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
                    "typeString": "uint256[8]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 915,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1763:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 917,
                    "length": {
                      "hexValue": "38",
                      "id": 916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1771:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1763:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
                      "typeString": "uint256[8]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1685:107:6"
            },
            "returnParameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1800:0:6"
            },
            "scope": 952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Contract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          952
        ],
        "name": "Contract",
        "nameLocation": "153:8:6",
        "scope": 953,
        "usedErrors": [
          873
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 6
}